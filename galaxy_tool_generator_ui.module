<?php

/**
 * Implements hook_menu().
 */
function galaxy_tool_generator_ui_menu() {
  $items['all_galaxy_tools'] = [
    'title' => 'All Galaxy Tools',
    'description' => t('A page to view all Galaxy tools'),
    'page callback' => 'all_galaxy_tools_page',
    'access arguments' => ['access content'],
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
    //    'file' => 'includes/galaxy_tool_xml.form.inc',
    'weight' => 2,
  ];

  $items['publish_tool'] = [
    'title' => 'Publish Tool',
    'description' => t('A page for publishing tools to toolshed or testtoolshed.'),
    'page callback' => 'publish_tool_page',
    'access arguments' => ['access content'],
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 3,
  ];

  return $items;
}

/**
 * Page callback for all_galaxy_tools page.
 */
function all_galaxy_tools_page() {
  return 'all galaxy tools';
}

/**
 * Page callback for publish_tool page.
 */
function publish_tool_page() {
  return 'publish tool';
}


/**
 * Implements hook_menu_alter().
 */
function galaxy_tool_generator_ui_menu_alter(&$items) {
dpm($items);
  unset($items['node/%webform_menu/webform/components']);
  unset($items['node/%webform_menu/webform/conditionals']);
  unset($items['node/%webform_menu/webform/emails']);
  unset($items['node/%webform_menu/webform/configure']);
  $items['node/%webform_menu/webform']['title'] = 'XML components';


  foreach (array_keys($items) as $menu_link) {
    // remove unuseful menu items for webform.
    if (preg_match('/webform-results/', $menu_link)) {
      unset($items[$menu_link]);
    }
  }

  // hide webform node edit page
  $items['node/%node/edit']['access callback'] = FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function galaxy_tool_generator_ui_form_webform_node_form_alter(&$form, &$form_state, $form_id) {

  $form['existing_or_new_tool'] = [
    '#type' => 'radios',
    '#title' => t('Existing or new galaxy tool?'),
    '#description' => t('New tool XML file can be added to an existing Galaxy tool or
      a new Galaxy tool.'),
    '#options' => drupal_map_assoc([
      'New',
      'Existing',
    ]),
    '#default_value' => 'New',
    '#weight' => -10,
  ];
  $form['new_galaxy_tool'] = [
    '#type' => 'textfield',
    '#title' => t('New Galaxy tool'),
    '#description' => t('Enter a name for your galaxy tool. This will be the name for 
      the tool in Galaxy toolshed or testtoolshed'),
    '#weight' => -9,
    '#states' => [
      'visible' => [
        ':input[name="existing_or_new_tool"]' => ['value' => 'New'],
      ],
    ],
  ];
  // create galaxy_tools directory if it doesn't exist.
  $galaxy_tools_directory = 'public://galaxy_tools/';
  file_prepare_directory($galaxy_tools_directory, FILE_CREATE_DIRECTORY);
  // get all galaxy tools names by scanning the galaxy_tools directory.
  $directories_in_galaxy_tools = scandir($galaxy_tools_directory);
  // remove '.' an '..' directories.
  $all_galaxy_tools = [];
  foreach ($directories_in_galaxy_tools as $directory) {
    if (!in_array($directory, ['.', '..'])) {
      $all_galaxy_tools[] = $directory;
    }
  }
  // convert $all_galaxy_tools to an unassociative array.
  $all_galaxy_tools = array_values($all_galaxy_tools);
  if (count($all_galaxy_tools) == 0) {
    $form['existing_galaxy_tool'] = [
      '#markup' => t('<span style="color: #19B5FE">No existing Galaxy tools 
            available. Please create a new one.</span>'),
      '#weight' => -9,
      '#states' => [
        'invisible' => [
          ':input[name="existing_or_new_tool"]' => ['value' => 'Existing'],
        ],
      ],
    ];
  }
  else {
    $form['existing_galaxy_tool'] = [
      '#type' => 'select',
      '#title' => t('Existing Galaxy tool'),
      '#description' => t('Select an existing Galaxy tool'),
      '#required' => TRUE,
      '#weight' => -9,
      '#options' => drupal_map_assoc($all_galaxy_tools),
      '#states' => [
        'visible' => [
          ':input[name="existing_or_new_tool"]' => ['value' => 'Existing'],
        ],
      ],
    ];
  }

  // change one field title from the form on the add-webform page
  $form['title'] = [
    '#type' => 'textfield',
    '#title' => t('XML file name'),
    '#description' => t('Galaxy tool XML file name without extension. For example, 
      if your tool XML file name is <span style="color: #FF5666">hisat2.xml</span>, you should
      enter <span style="color: #FF5666">hisat2</span>.'),
    '#required' => TRUE,
    '#maxlength' => 255,
    '#weight' => -5,
  ];
  $form['actions']['submit']['#submit'][] = 'create_galaxy_tool';
}

/**
 * webform_node_form form submitter.
 */
function create_galaxy_tool($form, &$form_state) {
  // create the 'galaxy_tools/GALAXY_TOOL_NAME' directory if it does not exist.
  if ($form_state['values']['existing_or_new_tool'] == 'Existing') {
    $galaxy_tool_name = $form_state['values']['existing_galaxy_tool'];
  }
  else {
    $galaxy_tool_name = $form_state['values']['new_galaxy_tool'];
  }
  $directory = 'public://galaxy_tools/' . $galaxy_tool_name;
  file_prepare_directory($directory, FILE_CREATE_DIRECTORY);
  // create tool xml file
  $xml_file = $form_state['values']['title'] . '.xml';
  file_create_filename($xml_file, $directory);
}